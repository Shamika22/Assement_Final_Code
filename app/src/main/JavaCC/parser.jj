// Hello world JavaCC grammar file.

// Notes:
// * To change the class name (MyParser), you can simply change it here, but the .java code will
//   need to be updated accordingly.
// * To change the *package* name, you also need to edit build.gradle.

PARSER_BEGIN(MyParser)
package calenderapp.app;
import calenderapp.utilities.Event;
import calenderapp.utilities.ParseObject;import calenderapp.utilities.PlugginParser;
import java.io.*;
import java.time.format.DateTimeFormatter;
import java.time.*;
import java.util.HashMap;
import java.util.List;

public class MyParser
{

    private static ParseObject theParseList = new ParseObject();


    public ParseObject parse(String filename) throws IOException,ParseException
    {

            String theVal = "THis is from the parser val";
            parserController();

            return theParseList;
    }



}
PARSER_END(MyParser)

SKIP: { " " | "\n" | "\r" }

TOKEN: {
    < HELLO: "hello" > |
    < WORLD: "world" > |
    < EVENT: "event"> |
    < DATE: "20"(["0"-"9"])* "-" ["0"-"9"] ["0"-"9"] "-" ["0"-"9"] ["0"-"9"] > |

    < INTEGER: (["0"-"9"])+ > |
    < TIME: (["0"-"2"]["0"-"9"])":"(["0"-"5"]["0"-"9"])":"(["0"-"5"]["0"-"9"]) >|
    < TIMEPLUGIN: "\"""([0-2][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]""" >|
    < STRING: "\"" (~["\""])* "\"" > |

    < ALLDAY: "all-day"> |
    < DATEKEY: "StartDate"> |
    < TIMEKEY: "StartTime"> |


    < PLUGIN: "plugin"> |
    < LBRACE: "{" > |
    < RBRACE: "}" > |

    <IDENTIFIER: (["a"-"z","A"-"Z","-"])(["a"-"z","A"-"Z","-","0"-"9"])*> |
    < PLUGINID: (["a"-"z", "A"-"Z", "."])+ > |

    < COMMA: ","> |
    < COLON: ":">



}

void parserController() :
{
}
{
    (event() | plugin())* <EOF>
}


void plugin():
{
    Token pluginToken;
    Token identifier;
    Token value;
    String pluginTokenVal;
    String identifierVal;
    String valueVal;

}
{
    <PLUGIN> pluginToken = <PLUGINID> <LBRACE>
    {
        pluginTokenVal = pluginToken.image;
        PlugginParser thePluginParser = new PlugginParser(pluginTokenVal);
    }

        (
             identifier = <IDENTIFIER> ":" value = <STRING>
             {

                 identifierVal = identifier.image.replace("\"", "");
                 valueVal = value.image.replace("\"", "");

                 thePluginParser.addArguments(identifierVal,valueVal);
             }
             (
                 ","
             )?
        )*

        {
            theParseList.addPluggin(thePluginParser);
        }

    "}"

}

void event() :
{
    Token dateToken;
    Token timeToken;
    Token titleToken;
    Token durationToken;
    String dateString;
    String timeString;
    String titleString;
    String durationString;
    DateTimeFormatter dateFormatter;
    DateTimeFormatter timeFormatter;
    LocalDate localDate;
    LocalTime localTime;
    int duration;
}
{
    <EVENT> dateToken = <DATE> (
        (
            timeToken = <TIME> durationToken = <INTEGER> titleToken = <STRING>
            {
    dateString = dateToken.image;
    timeString = timeToken.image;
    titleString = titleToken.image;
    dateFormatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
    timeFormatter = DateTimeFormatter.ofPattern("HH:mm:ss");
    localDate = LocalDate.parse(dateString, dateFormatter);
    localTime = LocalTime.parse(timeString, timeFormatter);
    durationString = durationToken.image;
    duration = Integer.parseInt(durationString);

    Event theEvent = new Event(titleString.replace("\"", ""),localDate,localTime,duration,0);
    theParseList.addEvent(theEvent);

}
        )
        |
        (
            <ALLDAY> titleToken = <STRING>
            {
                dateString = dateToken.image;
                titleString = titleToken.image;
                dateFormatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
                timeFormatter = DateTimeFormatter.ofPattern("HH:mm:ss");
                localDate = LocalDate.parse(dateString, dateFormatter);
                localTime = LocalTime.parse("00:00:00", timeFormatter);

                Event theFullDayEvent = new Event(titleString.replace("\"", ""),localDate , localTime);
                theParseList.addEvent(theFullDayEvent);
            }
        )
    )
}